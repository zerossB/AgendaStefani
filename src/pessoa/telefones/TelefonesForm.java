package pessoa.telefones;
/**
 *
 * @author JSQLGen
 */
public class TelefonesForm extends javax.swing.JDialog {
    private final java.sql.Connection connection;
    private Telefones telefones;

    /** Construtor do form TelefonesForm
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param telefones Objeto a ser editado
     */
    public TelefonesForm(java.awt.Window parent, java.sql.Connection connection, Telefones telefones) {
        super(parent);
        this.connection = connection;
        this.telefones = telefones;
        initComponents();
        obj2form();
        this.setVisible(true);
    }

    /** Exibe caixa de diálogo para preenchimento dos campos
     * @param parent Janela mãe
     * @param connection Conexão com o BD
     * @param telefones Objeto a ser editado
     * @return the telefones
     */
    public static Telefones showInputDialog(java.awt.Window parent, java.sql.Connection connection, Telefones telefones) {
        return new TelefonesForm(parent, connection, telefones).telefones;
    }

    /** Transfere os dados do objeto para o formulário */
    private void obj2form() {
        tId.setText(telefones.getId()==null?"":telefones.getId().toString());
        cTipo.setSelectedItem(telefones.getTipo());
        tCelular.setText(telefones.getCelular());
        tFixo.setText(telefones.getFixo());
    }

    /** Transfere os dados do formulário para o objeto */
    private void form2obj() {
        telefones.setId(tId.getText());
        telefones.setTipo(cTipo.getSelectedItem().toString());
        telefones.setCelular(tCelular.getText());
        telefones.setFixo(tFixo.getText());
    }

    /** valida os dados do formulário */
    private String validateForm() {
        String fieldError ="";
        if(cTipo.getSelectedItem()==null) fieldError +="Tipo\n";
        if(tCelular.getText().length()<1) fieldError +="Celular\n";
        if(tFixo.getText().length()<1) fieldError +="Fixo\n";
        return fieldError;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tId = new javax.swing.JLabel();
        pButtons = new javax.swing.JPanel();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        cTipo = new javax.swing.JComboBox(Telefones.TIPO);
        tCelular = new javax.swing.JFormattedTextField();
        tFixo = new javax.swing.JFormattedTextField();

        tId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tId.setBorder(javax.swing.BorderFactory.createTitledBorder("Id"));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulário de Telefones");
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-accept-16.png"))); // NOI18N
        bOk.setMnemonic('O');
        bOk.setText("Ok");
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pButtons.add(bOk);

        bCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox/images/stock_calc-cancel-16.png"))); // NOI18N
        bCancel.setMnemonic('C');
        bCancel.setText("Cancelar");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        pButtons.add(bCancel);

        cTipo.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));
        cTipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cTipoFocusLost(evt);
            }
        });

        tCelular.setBorder(javax.swing.BorderFactory.createTitledBorder("Celular"));
        try {
            tCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tFixo.setBorder(javax.swing.BorderFactory.createTitledBorder("Fixo"));
        try {
            tFixo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cTipo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tCelular)
                    .addComponent(tFixo)
                    .addComponent(pButtons, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tFixo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(pButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(290, 334));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        String fieldError =validateForm();
        if(fieldError.length()==0) {
            form2obj();
            this.setVisible(false);
            this.dispose();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Verifique os campos seguintes e tente novamente!\n"+fieldError,"Aviso",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bOkActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        telefones = null;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed


    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        bCancelActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void cTipoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cTipoFocusLost
        if(cTipo.getSelectedIndex() == 0){
            tCelular.setEditable(false);
            tCelular.setEnabled(false);
            tFixo.setEditable(true);
            tFixo.setEnabled(true);
        }else if (cTipo.getSelectedIndex() == 1){
            tCelular.setEditable(true);
            tCelular.setEnabled(true);
            tFixo.setEditable(false);
            tFixo.setEnabled(false);
        }
    }//GEN-LAST:event_cTipoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bOk;
    private javax.swing.JComboBox cTipo;
    private javax.swing.JPanel pButtons;
    private javax.swing.JFormattedTextField tCelular;
    private javax.swing.JFormattedTextField tFixo;
    private javax.swing.JLabel tId;
    // End of variables declaration//GEN-END:variables
}
